import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { motion } from 'framer-motion';
import { 
  ArrowLeft, 
  Share2, 
  Copy, 
  QrCode, 
  Users, 
  Calendar, 
  Clock,
  Eye,
  BarChart3,
  Settings,
  Trash2
} from 'lucide-react';
import { useTelegram } from '../../hooks/useTelegram';
import { useStableBackButton } from '../../hooks/useStableBackButton';
import { useAppStore } from '../../store/useAppStore';
import { QRCodeGenerator } from '../../components/ui/QRCodeGenerator';
import type { Survey } from '../../types';

export const SurveyViewPage: React.FC = () => {
  const { surveyId } = useParams<{ surveyId: string }>();
  const navigate = useNavigate();
  const { hapticFeedback, showAlert } = useTelegram();
  const { userSurveys, removeSurvey } = useAppStore();
  
  const [survey, setSurvey] = useState<Survey | null>(null);
  const [showQRCode, setShowQRCode] = useState(false);
  const [surveyUrl, setSurveyUrl] = useState('');

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–ø—Ä–æ—Å –ø–æ ID
  useEffect(() => {
    if (surveyId) {
      const foundSurvey = userSurveys.find(s => s.id === surveyId);
      if (foundSurvey) {
        setSurvey(foundSurvey);
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º URL –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –æ–ø—Ä–æ—Å–∞
        const baseUrl = window.location.origin;
        const surveyUrl = `${baseUrl}/survey/${surveyId}/take`;
        setSurveyUrl(surveyUrl);
      } else {
        // –û–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
        navigate('/');
      }
    }
  }, [surveyId, userSurveys, navigate]);

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
  useStableBackButton({
    onBack: () => navigate('/')
  });

  // –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏
  const handleCopyLink = async () => {
    try {
      await navigator.clipboard.writeText(surveyUrl);
      hapticFeedback?.success();
      showAlert?.('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
    } catch (error) {
      console.error('Failed to copy link:', error);
      showAlert?.('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É');
    }
  };

  // –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π
  const handleShare = async () => {
    if (navigator.share) {
      try {
        await navigator.share({
          title: survey?.title || '–û–ø—Ä–æ—Å',
          text: survey?.description || '',
          url: surveyUrl
        });
        hapticFeedback?.success();
      } catch (error) {
        console.error('Error sharing:', error);
      }
    } else {
      // Fallback - –∫–æ–ø–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É
      handleCopyLink();
    }
  };

  // –£–¥–∞–ª–µ–Ω–∏–µ –æ–ø—Ä–æ—Å–∞
  const handleDeleteSurvey = () => {
    if (survey && window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –æ–ø—Ä–æ—Å?')) {
      removeSurvey(survey.id);
      hapticFeedback?.success();
      navigate('/');
    }
  };

  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –∞–Ω–∞–ª–∏—Ç–∏–∫–µ
  const handleViewAnalytics = () => {
    if (survey) {
      navigate(`/survey/${survey.id}/analytics`);
    }
  };

  if (!survey) {
    return (
      <div style={{
        minHeight: '100vh',
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center',
        backgroundColor: 'var(--tg-bg-color)'
      }}>
        <div style={{ textAlign: 'center' }}>
          <div style={{ fontSize: '48px', marginBottom: '16px' }}>üìä</div>
          <p style={{ color: 'var(--tg-hint-color)' }}>–ó–∞–≥—Ä—É–∑–∫–∞ –æ–ø—Ä–æ—Å–∞...</p>
        </div>
      </div>
    );
  }

  return (
    <div style={{
      minHeight: '100vh',
      backgroundColor: 'var(--tg-bg-color)',
      color: 'var(--tg-text-color)'
    }}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div style={{
        padding: '16px',
        borderBottom: '1px solid var(--tg-section-separator-color)',
        backgroundColor: 'var(--tg-section-bg-color)'
      }}>
        <div style={{
          display: 'flex',
          alignItems: 'center',
          gap: '12px',
          marginBottom: '16px'
        }}>
          <button
            onClick={() => navigate('/')}
            style={{
              background: 'none',
              border: 'none',
              color: 'var(--tg-text-color)',
              cursor: 'pointer',
              padding: '8px',
              borderRadius: '8px',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center'
            }}
          >
            <ArrowLeft size={20} />
          </button>
          <h1 style={{
            fontSize: '20px',
            fontWeight: '600',
            margin: 0,
            flex: 1
          }}>
            {survey.title}
          </h1>
        </div>

        {survey.description && (
          <p style={{
            fontSize: '14px',
            color: 'var(--tg-hint-color)',
            margin: 0,
            lineHeight: '1.4'
          }}>
            {survey.description}
          </p>
        )}
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–ø—Ä–æ—Å–∞ */}
      <div style={{ padding: '16px' }}>
        <div style={{
          display: 'grid',
          gridTemplateColumns: '1fr 1fr',
          gap: '12px',
          marginBottom: '24px'
        }}>
          <div style={{
            backgroundColor: 'var(--tg-section-bg-color)',
            padding: '16px',
            borderRadius: '12px',
            textAlign: 'center'
          }}>
            <div style={{ fontSize: '24px', fontWeight: '600', color: 'var(--tg-button-color)' }}>
              {survey.questions.length}
            </div>
            <div style={{ fontSize: '12px', color: 'var(--tg-hint-color)', marginTop: '4px' }}>
              –í–æ–ø—Ä–æ—Å–æ–≤
            </div>
          </div>

          <div style={{
            backgroundColor: 'var(--tg-section-bg-color)',
            padding: '16px',
            borderRadius: '12px',
            textAlign: 'center'
          }}>
            <div style={{ fontSize: '24px', fontWeight: '600', color: 'var(--tg-button-color)' }}>
              {survey.responses.length}
            </div>
            <div style={{ fontSize: '12px', color: 'var(--tg-hint-color)', marginTop: '4px' }}>
              –û—Ç–≤–µ—Ç–æ–≤
            </div>
          </div>
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–∑–¥–∞–Ω–∏–∏ */}
        <div style={{
          backgroundColor: 'var(--tg-section-bg-color)',
          padding: '16px',
          borderRadius: '12px',
          marginBottom: '24px'
        }}>
          <h3 style={{
            fontSize: '16px',
            fontWeight: '600',
            margin: '0 0 12px 0'
          }}>
            –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–ø—Ä–æ—Å–µ
          </h3>

          <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>
            <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
              <Calendar size={16} color="var(--tg-hint-color)" />
              <span style={{ fontSize: '14px', color: 'var(--tg-hint-color)' }}>
                –°–æ–∑–¥–∞–Ω: {new Date(survey.createdAt).toLocaleDateString('ru-RU')}
              </span>
            </div>

            <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
              <Clock size={16} color="var(--tg-hint-color)" />
              <span style={{ fontSize: '14px', color: 'var(--tg-hint-color)' }}>
                –í—Ä–µ–º—è: {new Date(survey.createdAt).toLocaleTimeString('ru-RU', { 
                  hour: '2-digit', 
                  minute: '2-digit' 
                })}
              </span>
            </div>

            <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
              <Settings size={16} color="var(--tg-hint-color)" />
              <span style={{ fontSize: '14px', color: 'var(--tg-hint-color)' }}>
                –¢–∏–ø: {survey.settings.creationType === 'manual' ? '–†—É—á–Ω–æ–π' : '–ò–ò'}
              </span>
            </div>

            <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
              <div style={{
                width: '8px',
                height: '8px',
                borderRadius: '50%',
                backgroundColor: survey.isPublished ? '#34C759' : '#FF9500'
              }} />
              <span style={{ fontSize: '14px', color: 'var(--tg-hint-color)' }}>
                –°—Ç–∞—Ç—É—Å: {survey.isPublished ? '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω' : '–ß–µ—Ä–Ω–æ–≤–∏–∫'}
              </span>
            </div>
          </div>
        </div>

        {/* –°—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø—Ä–æ—Å */}
        <div style={{
          backgroundColor: 'var(--tg-section-bg-color)',
          padding: '16px',
          borderRadius: '12px',
          marginBottom: '24px'
        }}>
          <h3 style={{
            fontSize: '16px',
            fontWeight: '600',
            margin: '0 0 12px 0'
          }}>
            –°—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø—Ä–æ—Å
          </h3>

          <div style={{
            backgroundColor: 'var(--tg-bg-color)',
            padding: '12px',
            borderRadius: '8px',
            border: '1px solid var(--tg-section-separator-color)',
            marginBottom: '12px',
            wordBreak: 'break-all',
            fontSize: '12px',
            color: 'var(--tg-hint-color)'
          }}>
            {surveyUrl}
          </div>

          <div style={{ display: 'flex', gap: '8px' }}>
            <button
              onClick={handleCopyLink}
              style={{
                flex: 1,
                backgroundColor: 'var(--tg-button-color)',
                color: 'white',
                border: 'none',
                borderRadius: '8px',
                padding: '12px',
                fontSize: '14px',
                fontWeight: '500',
                cursor: 'pointer',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                gap: '8px'
              }}
            >
              <Copy size={16} />
              –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
            </button>

            <button
              onClick={handleShare}
              style={{
                flex: 1,
                backgroundColor: 'var(--tg-button-color)',
                color: 'white',
                border: 'none',
                borderRadius: '8px',
                padding: '12px',
                fontSize: '14px',
                fontWeight: '500',
                cursor: 'pointer',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                gap: '8px'
              }}
            >
              <Share2 size={16} />
              –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
            </button>
          </div>
        </div>

        {/* QR-–∫–æ–¥ */}
        <div style={{
          backgroundColor: 'var(--tg-section-bg-color)',
          padding: '16px',
          borderRadius: '12px',
          marginBottom: '24px',
          textAlign: 'center'
        }}>
          <h3 style={{
            fontSize: '16px',
            fontWeight: '600',
            margin: '0 0 12px 0'
          }}>
            QR-–∫–æ–¥ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
          </h3>

          <button
            onClick={() => setShowQRCode(!showQRCode)}
            style={{
              backgroundColor: 'var(--tg-button-color)',
              color: 'white',
              border: 'none',
              borderRadius: '8px',
              padding: '12px 24px',
              fontSize: '14px',
              fontWeight: '500',
              cursor: 'pointer',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              gap: '8px',
              margin: '0 auto 16px auto'
            }}
          >
            <QrCode size={16} />
            {showQRCode ? '–°–∫—Ä—ã—Ç—å QR-–∫–æ–¥' : '–ü–æ–∫–∞–∑–∞—Ç—å QR-–∫–æ–¥'}
          </button>

          {showQRCode && (
            <motion.div
              initial={{ opacity: 0, scale: 0.8 }}
              animate={{ opacity: 1, scale: 1 }}
              transition={{ duration: 0.2 }}
            >
              <QRCodeGenerator url={surveyUrl} size={200} />
              <p style={{
                fontSize: '12px',
                color: 'var(--tg-hint-color)',
                margin: '12px 0 0 0'
              }}>
                –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –æ–ø—Ä–æ—Å—É
              </p>
            </motion.div>
          )}
        </div>

        {/* –î–µ–π—Å—Ç–≤–∏—è */}
        <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>
          <button
            onClick={handleViewAnalytics}
            style={{
              backgroundColor: 'var(--tg-button-color)',
              color: 'white',
              border: 'none',
              borderRadius: '12px',
              padding: '16px',
              fontSize: '16px',
              fontWeight: '500',
              cursor: 'pointer',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              gap: '12px'
            }}
          >
            <BarChart3 size={20} />
            –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É
          </button>

          <button
            onClick={() => navigate(`/survey/${survey.id}/take`)}
            style={{
              backgroundColor: 'transparent',
              color: 'var(--tg-button-color)',
              border: '2px solid var(--tg-button-color)',
              borderRadius: '12px',
              padding: '16px',
              fontSize: '16px',
              fontWeight: '500',
              cursor: 'pointer',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              gap: '12px'
            }}
          >
            <Eye size={20} />
            –ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å
          </button>

          <button
            onClick={handleDeleteSurvey}
            style={{
              backgroundColor: 'transparent',
              color: '#FF3B30',
              border: '2px solid #FF3B30',
              borderRadius: '12px',
              padding: '16px',
              fontSize: '16px',
              fontWeight: '500',
              cursor: 'pointer',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              gap: '12px'
            }}
          >
            <Trash2 size={20} />
            –£–¥–∞–ª–∏—Ç—å –æ–ø—Ä–æ—Å
          </button>
        </div>
      </div>
    </div>
  );
};
