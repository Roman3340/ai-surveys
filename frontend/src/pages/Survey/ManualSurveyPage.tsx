import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { motion } from 'framer-motion';
import { ArrowLeft } from 'lucide-react';
import { useTelegram } from '../../hooks/useTelegram';
import TelegramEmoji from '../../components/ui/TelegramEmoji';
import { Button } from '../../components/ui/Button';
// import type { QuestionType } from '../../types'; // –í—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è

// –í—Ä–µ–º–µ–Ω–Ω–æ —É–±–∏—Ä–∞–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
// interface Question {
//   id: string;
//   type: QuestionType;
//   title: string;
//   required: boolean;
//   options?: string[];
// }

const ManualSurveyPage: React.FC = () => {
  const navigate = useNavigate();
  const { showConfirm } = useTelegram();

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–æ—Ä–º—ã
  const [surveyData, setSurveyData] = useState({
    title: '',
    description: '',
    endDate: '',
    maxParticipants: '',
    isAnonymous: false,
    hasReward: false,
    rewardType: 'promo_code' as 'promo_code' | 'stars' | 'custom',
    rewardValue: '',
    rewardDescription: ''
  });

  // –£–±–∏—Ä–∞–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–∫–∞ —á—Ç–æ
  // const [questions, setQuestions] = useState<Question[]>([]);
  // const [showQuestionForm, setShowQuestionForm] = useState(false);
  // const [editingQuestion, setEditingQuestion] = useState<Question | null>(null);

  const handleBack = () => {
    showConfirm('–î–∞–Ω–Ω—ã–µ –º–æ–≥—É—Ç –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å—Å—è. –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?').then((confirmed: boolean) => {
      if (confirmed) {
        navigate(-1);
      }
    });
  };

  const handleSurveyDataChange = (field: string, value: any) => {
    setSurveyData(prev => ({ ...prev, [field]: value }));
  };

  // –£–±–∏—Ä–∞–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–∫–∞ —á—Ç–æ
  // const addQuestion = () => { ... };
  // const saveQuestion = (question: Question) => { ... };
  // const deleteQuestion = (id: string) => { ... };
  // const handleCreateSurvey = () => { ... };

  return (
    <div style={{ 
      minHeight: '100vh', 
      backgroundColor: 'var(--tg-bg-color)',
      color: 'var(--tg-text-color)'
    }}>
      {/* –®–∞–ø–∫–∞ */}
      <div style={{
        display: 'flex',
        alignItems: 'center',
        padding: '16px',
        borderBottom: '1px solid var(--tg-section-separator-color)',
        backgroundColor: 'var(--tg-bg-color)',
        position: 'sticky',
        top: 0,
        zIndex: 10
      }}>
        <button
          onClick={handleBack}
          style={{
            background: 'none',
            border: 'none',
            color: 'var(--tg-button-color)',
            padding: '8px',
            borderRadius: '8px',
            cursor: 'pointer'
          }}
        >
          <ArrowLeft size={24} />
        </button>
        <h1 style={{
          marginLeft: '12px',
          fontSize: '20px',
          fontWeight: '600',
          margin: 0
        }}>
          –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        </h1>
      </div>

      <div style={{ padding: '24px 16px' }}>
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          style={{ textAlign: 'center', marginBottom: '32px' }}
        >
          <TelegramEmoji emoji="üìù" size="large" />
          <h2 style={{
            fontSize: '24px',
            fontWeight: '700',
            margin: '16px 0 8px 0'
          }}>
            –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
          </h2>
        </motion.div>

        {/* –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è */}
        <div style={{ marginBottom: '32px' }}>
          <div style={{ marginBottom: '20px' }}>
            <label style={{
              display: 'block',
              fontSize: '16px',
              fontWeight: '500',
              marginBottom: '8px'
            }}>
              –ù–∞–∑–≤–∞–Ω–∏–µ: –û–ø—Ä–æ—Å –æ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è—Ö –≤ –µ–¥–µ
            </label>
            <input
              type="text"
              value={surveyData.title}
              onChange={(e) => handleSurveyDataChange('title', e.target.value)}
              placeholder="–û–ø—Ä–æ—Å –æ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è—Ö –≤ –µ–¥–µ"
              style={{
                width: '100%',
                padding: '12px 16px',
                borderRadius: '8px',
                border: '1px solid var(--tg-section-separator-color)',
                backgroundColor: 'var(--tg-section-bg-color)',
                color: 'var(--tg-text-color)',
                fontSize: '16px'
              }}
            />
          </div>

          <div style={{ marginBottom: '20px' }}>
            <label style={{
              display: 'block',
              fontSize: '16px',
              fontWeight: '500',
              marginBottom: '8px'
            }}>
              –Ø–∑—ã–∫ –æ–ø—Ä–æ—Å–∞: üá∑üá∫ –†—É—Å—Å–∫–∏–π
            </label>
            <select
              style={{
                width: '100%',
                padding: '12px 16px',
                borderRadius: '8px',
                border: '1px solid var(--tg-section-separator-color)',
                backgroundColor: 'var(--tg-section-bg-color)',
                color: 'var(--tg-text-color)',
                fontSize: '16px'
              }}
            >
              <option value="ru">üá∑üá∫ –†—É—Å—Å–∫–∏–π</option>
              <option value="en">üá∫üá∏ English</option>
            </select>
          </div>

          <div style={{ marginBottom: '20px' }}>
            <label style={{
              display: 'block',
              fontSize: '16px',
              fontWeight: '500',
              marginBottom: '8px'
            }}>
              –í—ã–±—Ä–∞—Ç—å –ø–æ—Å—Ç
            </label>
            <Button
              variant="outline"
              onClick={() => {}}
              style={{
                width: '100%',
                justifyContent: 'flex-start',
                padding: '12px 16px'
              }}
            >
              –í—ã–±—Ä–∞—Ç—å –ø–æ—Å—Ç –¥–ª—è –æ–ø—Ä–æ—Å–∞
            </Button>
          </div>

          <div style={{ marginBottom: '20px' }}>
            <label style={{
              display: 'block',
              fontSize: '16px',
              fontWeight: '500',
              marginBottom: '8px'
            }}>
              –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –ø–æ—Å—Ç–∞:
            </label>
            <div style={{ display: 'flex', gap: '8px', marginBottom: '12px' }}>
              <Button variant="primary" size="sm">–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å</Button>
              <Button variant="outline" size="sm">–ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ</Button>
              <Button variant="outline" size="sm">–£—á–∞—Å—Ç–≤—É—é!</Button>
            </div>
            <p style={{
              fontSize: '14px',
              color: 'var(--tg-hint-color)',
              margin: 0
            }}>
              –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, –ø–æ—Å—Ç –∏ —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≤–∞—à–µ–≥–æ –æ–ø—Ä–æ—Å–∞.
            </p>
          </div>

          {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ */}
          <div style={{
            backgroundColor: 'var(--tg-section-bg-color)',
            padding: '20px',
            borderRadius: '12px',
            marginBottom: '20px'
          }}>
            <h3 style={{
              fontSize: '18px',
              fontWeight: '600',
              marginBottom: '16px',
              margin: 0
            }}>
              –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–ø—Ä–æ—Å–∞
            </h3>

            <div style={{ marginBottom: '16px' }}>
              <label style={{
                display: 'block',
                fontSize: '16px',
                marginBottom: '8px'
              }}>
                –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
              </label>
              <input
                type="date"
                value={surveyData.endDate}
                onChange={(e) => handleSurveyDataChange('endDate', e.target.value)}
                style={{
                  width: '100%',
                  padding: '12px 16px',
                  borderRadius: '8px',
                  border: '1px solid var(--tg-section-separator-color)',
                  backgroundColor: 'var(--tg-bg-color)',
                  color: 'var(--tg-text-color)',
                  fontSize: '16px'
                }}
              />
            </div>

            <div style={{ marginBottom: '16px' }}>
              <label style={{
                display: 'block',
                fontSize: '16px',
                marginBottom: '8px'
              }}>
                –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
              </label>
              <input
                type="number"
                value={surveyData.maxParticipants}
                onChange={(e) => handleSurveyDataChange('maxParticipants', e.target.value)}
                placeholder="–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π"
                style={{
                  width: '100%',
                  padding: '12px 16px',
                  borderRadius: '8px',
                  border: '1px solid var(--tg-section-separator-color)',
                  backgroundColor: 'var(--tg-bg-color)',
                  color: 'var(--tg-text-color)',
                  fontSize: '16px'
                }}
              />
            </div>

            <div style={{ marginBottom: '16px' }}>
              <label style={{
                display: 'flex',
                alignItems: 'center',
                fontSize: '16px',
                cursor: 'pointer'
              }}>
                <input
                  type="checkbox"
                  checked={surveyData.isAnonymous}
                  onChange={(e) => handleSurveyDataChange('isAnonymous', e.target.checked)}
                  style={{ marginRight: '12px' }}
                />
                –ê–Ω–æ–Ω–∏–º–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
              </label>
            </div>

            <div>
              <label style={{
                display: 'flex',
                alignItems: 'center',
                fontSize: '16px',
                cursor: 'pointer'
              }}>
                <input
                  type="checkbox"
                  checked={surveyData.hasReward}
                  onChange={(e) => handleSurveyDataChange('hasReward', e.target.checked)}
                  style={{ marginRight: '12px' }}
                />
                –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ —É—á–∞—Å—Ç–∏–µ
              </label>
            </div>

            {surveyData.hasReward && (
              <div style={{ marginTop: '16px', paddingLeft: '24px' }}>
                <div style={{ marginBottom: '12px' }}>
                  <select
                    value={surveyData.rewardType}
                    onChange={(e) => handleSurveyDataChange('rewardType', e.target.value)}
                    style={{
                      width: '100%',
                      padding: '12px 16px',
                      borderRadius: '8px',
                      border: '1px solid var(--tg-section-separator-color)',
                      backgroundColor: 'var(--tg-bg-color)',
                      color: 'var(--tg-text-color)',
                      fontSize: '16px'
                    }}
                  >
                    <option value="promo_code">–ü—Ä–æ–º–æ–∫–æ–¥</option>
                    <option value="stars">–ó–≤—ë–∑–¥—ã Telegram</option>
                    <option value="custom">–î—Ä—É–≥–æ–µ</option>
                  </select>
                </div>
                <input
                  type="text"
                  value={surveyData.rewardValue}
                  onChange={(e) => handleSurveyDataChange('rewardValue', e.target.value)}
                  placeholder="–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–∞–≥—Ä–∞–¥—ã"
                  style={{
                    width: '100%',
                    padding: '12px 16px',
                    borderRadius: '8px',
                    border: '1px solid var(--tg-section-separator-color)',
                    backgroundColor: 'var(--tg-bg-color)',
                    color: 'var(--tg-text-color)',
                    fontSize: '16px',
                    marginBottom: '12px'
                  }}
                />
                <input
                  type="text"
                  value={surveyData.rewardDescription}
                  onChange={(e) => handleSurveyDataChange('rewardDescription', e.target.value)}
                  placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞–≥—Ä–∞–¥—ã"
                  style={{
                    width: '100%',
                    padding: '12px 16px',
                    borderRadius: '8px',
                    border: '1px solid var(--tg-section-separator-color)',
                    backgroundColor: 'var(--tg-bg-color)',
                    color: 'var(--tg-text-color)',
                    fontSize: '16px'
                  }}
                />
              </div>
            )}
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ —Å–Ω–∏–∑—É */}
        <div style={{
          display: 'flex',
          gap: '12px',
          marginTop: '24px'
        }}>
          <Button
            variant="outline"
            onClick={handleBack}
            style={{ flex: 1 }}
          >
            –ù–∞–∑–∞–¥
          </Button>
          <Button
            variant="primary"
            onClick={() => navigate('/survey/create/manual/questions')}
            style={{ flex: 1 }}
          >
            –í–ø–µ—Ä–µ–¥
          </Button>
        </div>
      </div>
    </div>
  );
};

export default ManualSurveyPage;
